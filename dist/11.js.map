{"version":3,"sources":["webpack:///../node_modules/codemirror-graphql/mode.js","webpack:///../node_modules/codemirror-graphql/utils/mode-factory.js","webpack:///../node_modules/codemirror-graphql/utils/mode-indent.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,mCAAmC,mBAAO,CAAC,gEAAY;AACvD,qCAAqC,mBAAO,CAAC,sFAAsB;AACnE;AACA,gC;;;;;;;;;;;;ACRa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,iCAAiC,mBAAO,CAAC,uFAA0B;AACnE,oCAAoC,mBAAO,CAAC,8EAAe;AAC3D;AACA;AACA,0CAA0C,8DAA8D,EAAE;AAC1G;AACA;AACA,uBAAuB,0BAA0B;AACjD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,0BAA0B;AAC1B,4BAA4B;AAC5B,SAAS;AACT;AACA;AACA;AACA,wC;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC","file":"11.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar codemirror_1 = __importDefault(require(\"codemirror\"));\nvar mode_factory_1 = __importDefault(require(\"./utils/mode-factory\"));\ncodemirror_1.default.defineMode('graphql', mode_factory_1.default);\n//# sourceMappingURL=mode.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_language_service_1 = require(\"graphql-language-service\");\nvar mode_indent_1 = __importDefault(require(\"./mode-indent\"));\nvar graphqlModeFactory = function (config) {\n    var parser = graphql_language_service_1.onlineParser({\n        eatWhitespace: function (stream) { return stream.eatWhile(graphql_language_service_1.isIgnored); },\n        lexRules: graphql_language_service_1.LexRules,\n        parseRules: graphql_language_service_1.ParseRules,\n        editorConfig: { tabSize: config.tabSize },\n    });\n    return {\n        config: config,\n        startState: parser.startState,\n        token: parser.token,\n        indent: mode_indent_1.default,\n        electricInput: /^\\s*[})\\]]/,\n        fold: 'brace',\n        lineComment: '#',\n        closeBrackets: {\n            pairs: '()[]{}\"\"',\n            explode: '()[]{}',\n        },\n    };\n};\nexports.default = graphqlModeFactory;\n//# sourceMappingURL=mode-factory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction indent(state, textAfter) {\n    var _a, _b;\n    var levels = state.levels;\n    var level = !levels || levels.length === 0\n        ? state.indentLevel\n        : levels[levels.length - 1] -\n            (((_a = this.electricInput) === null || _a === void 0 ? void 0 : _a.test(textAfter)) ? 1 : 0);\n    return (level || 0) * (((_b = this.config) === null || _b === void 0 ? void 0 : _b.indentUnit) || 0);\n}\nexports.default = indent;\n//# sourceMappingURL=mode-indent.js.map"],"sourceRoot":""}